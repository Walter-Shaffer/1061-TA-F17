/*		 * [LinearSearch].java 		 * Author: [Aneri Desai]		 * Submission Date: [11/16/2017]		 * 		 * Purpose: In the lab we learned how to do commanad line arguments of string and double and also do the linear search using for loop.		 * 		 *  Statement of Academic Honesty:		 *  		 *  The following code represent my own work. I have neither received nor given inappropriate assistance. 		 *  I have not copied or modified code from any source other than the course webpage or the course textbook.		 *  I recognize that any unauthorized assistance or plagiarism will be handled in accordance with the policies		 *  at Clemson University and the policies of this course. I recognize that my work is based on an assignment 		 *  created by the School of Computing at Clemson Univeristy. Any publishing or posting of source code for this 		 *  project is strictly prohibited unless you have written consent from the instructor.  		 */		public class LinearSearch 		{		    public static int flag = 1;		    public static int flag1 = 1;		    		"    public static int getFirstIndex(String item, String[] x) "		    {			for (int i = 3; i < x.length; i++)		    {			if (x[i].equals(item)){		    flag = 0;		}		if(flag == 0) {		"    System.out.println(item + """" + "" found in x at index "" + (i-3));"		    return i;		}	    }if(flag != 0) { 		"    System.out.println(item + """" + "" not found in x"");"		}return -1;	    }		"    public static int getFirstIndex(double item, double[] x)"		    {			for (int i = 0; i < x.length; i++)		    {			if (x[i] == item){		    flag1 = 0;		} 		if(flag1 == 0) {		"    System.out.println(item + """" +"" found in x at index "" + """"+(i-3));"		    return i;		}	    }if(flag1 != 0) { 		"    System.out.println(item + """" + "" not found in x"");"		}return -1;	    }		    public static void main(String[] args)		    {					String a;		a=args[0];				"if(a.startsWith(""-s""))"		    {			String item=args[1];				String[] x=new String[args.length];		for (int i = 3; i < args.length; i++) {		    x[i] = args[i];		    		}		"getFirstIndex(item,x);"	    }		"if(a.startsWith(""-d""))"		    {			double item=Double.parseDouble(args[1]);		double[] x= new double[args.length];		for (int i = 3; i < args.length; i++) {		    x[i] = Double.parseDouble(args[i]);		    		}		"getFirstIndex(item,x);"	    }			    }		}		